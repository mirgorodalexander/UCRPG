// File auto-generated by NG Tools.
using UnityEditor;

namespace NGToolsEditor
{
	internal static class ExternalNGMenuItems
	{
		public const string	MenuItemPath = Constants.PackageTitle + "/";

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "Deep Asset Graph", priority = 1333)]
		public static void	DeepAssetGraphWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "Deep Asset Graph", Utility.GetType("NGToolsEditor.NGAssetFinder", "DeepAssetGraphWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Asset Finder", priority = 1330)]
		public static void	NGAssetFinderWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Asset Finder", Utility.GetType("NGToolsEditor.NGAssetFinder", "NGAssetFinderWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Asset Map", priority = 1330)]
		public static void	NGAssetMapWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Asset Map", Utility.GetType("NGToolsEditor.NGAssetFinder", "NGAssetMapWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Components Inspector", priority = 1340)]
		public static void	NGComponentsInspectorWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Components Inspector", Utility.GetType("NGToolsEditor.NGComponentsInspector", "NGComponentsInspectorWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Console", priority = 1101)]
		public static void	NGConsoleWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Console", Utility.GetType("NGToolsEditor.NGConsole", "NGConsoleWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "About", priority = 980)]
		public static void	AboutWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "About", Utility.GetType("NGToolsEditor", "AboutWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Check GUID", priority = 1350)]
		public static void	NGCheckGUIDWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Check GUID", Utility.GetType("NGToolsEditor", "NGCheckGUIDWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "Get NG Log", priority = 2001)]
		public static void	PreferencesGetNGLog()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "Get NG Log", Utility.GetType("NGToolsEditor", "Preferences"), "GetNGLog");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "Activate A License", priority = 2010)]
		public static void	PreferencesOpenLicenses()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "Activate A License", Utility.GetType("NGToolsEditor", "Preferences"), "OpenLicenses");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "Preferences", priority = 995)]
		public static void	PreferencesOpenPreferences()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "Preferences", Utility.GetType("NGToolsEditor", "Preferences"), "OpenPreferences");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Settings", priority = 1001)]
		public static void	NGSettingsWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Settings", Utility.GetType("NGToolsEditor", "NGSettingsWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Hotkeys", priority = 1010)]
		public static void	NGHotkeysOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Hotkeys", Utility.GetType("NGToolsEditor", "NGHotkeys"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Fav", priority = 1307)]
		public static void	NGFavWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Fav", Utility.GetType("NGToolsEditor.NGFav", "NGFavWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Flow Inspector	[BETA]", priority = 1070)]
		public static void	NGFlowInspectorWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Flow Inspector	[BETA]", Utility.GetType("NGToolsEditor.NGFlowInspector", "NGFlowInspectorWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Fullscreen Bindings", priority = 1355)]
		public static void	NGFullscreenBindingsWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Fullscreen Bindings", Utility.GetType("NGToolsEditor.NGFullscreenBindings", "NGFullscreenBindingsWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Hub", priority = 1300)]
		public static void	NGHubWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Hub", Utility.GetType("NGToolsEditor.NGHub", "NGHubWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Hub as Dock", priority = 1301)]
		public static void	NGHubWindowOpenAsDock()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Hub as Dock", Utility.GetType("NGToolsEditor.NGHub", "NGHubWindow"), "OpenAsDock");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Missing Script Recovery", priority = 1345)]
		public static void	NGMissingScriptRecoveryWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Missing Script Recovery", Utility.GetType("NGToolsEditor.NGMissingScriptRecovery", "NGMissingScriptRecoveryWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Nav Selection", priority = 1315)]
		public static void	NGNavSelectionWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Nav Selection", Utility.GetType("NGToolsEditor.NGNavSelection", "NGNavSelectionWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Prefs", priority = 1310)]
		public static void	NGPrefsWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Prefs", Utility.GetType("NGToolsEditor.NGPrefs", "NGPrefsWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Remote Camera", priority = 1220)]
		public static void	NGRemoteCameraWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Remote Camera", Utility.GetType("NGToolsEditor.NGRemoteScene", "NGRemoteCameraWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Remote Hierarchy", priority = 1210)]
		public static void	NGRemoteHierarchyWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Remote Hierarchy", Utility.GetType("NGToolsEditor.NGRemoteScene", "NGRemoteHierarchyWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Remote Inspector", priority = 1215)]
		public static void	NGRemoteInspectorWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Remote Inspector", Utility.GetType("NGToolsEditor.NGRemoteScene", "NGRemoteInspectorWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Remote Project", priority = 1219)]
		public static void	NGRemoteProjectWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Remote Project", Utility.GetType("NGToolsEditor.NGRemoteScene", "NGRemoteProjectWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Remote Static Inspector", priority = 1217)]
		public static void	NGRemoteStaticInspectorWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Remote Static Inspector", Utility.GetType("NGToolsEditor.NGRemoteScene", "NGRemoteStaticInspectorWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Replay", priority = 1230)]
		public static void	NGReplayWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Replay", Utility.GetType("NGToolsEditor.NGRemoteScene", "NGReplayWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Renamer", priority = 1340)]
		public static void	NGRenamerWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Renamer", Utility.GetType("NGToolsEditor.NGRenamer", "NGRenamerWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Scenes", priority = 1317)]
		public static void	NGScenesWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Scenes", Utility.GetType("NGToolsEditor.NGScenes", "NGScenesWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Shader Finder", priority = 1335)]
		public static void	NGShaderFinderWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Shader Finder", Utility.GetType("NGToolsEditor.NGShaderFinder", "NGShaderFinderWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Menu Editor	[BETA]", priority = 1075)]
		public static void	NGMenuEditorOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Menu Editor	[BETA]", Utility.GetType("NGToolsEditor.NGSmartMenu", "NGMenuEditor"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Spotlight", priority = 1290)]
		public static void	NGSpotlightWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Spotlight", Utility.GetType("NGToolsEditor.NGSpotlight", "NGSpotlightWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Static Inspector", priority = 1328)]
		public static void	NGStaticInspectorWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Static Inspector", Utility.GetType("NGToolsEditor.NGStaticInspector", "NGStaticInspectorWindow"), "Open");
		}

		[MenuItem(ExternalNGMenuItems.MenuItemPath + "NG Sync Folders", priority = 1380)]
		public static void	NGSyncFoldersWindowOpen()
		{
			HQ.Invoke(ExternalNGMenuItems.MenuItemPath + "NG Sync Folders", Utility.GetType("NGToolsEditor.NGSyncFolders", "NGSyncFoldersWindow"), "Open");
		}
	}
}